{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Project Overview Today, Industries or warehouses are equipped with Automatic Guided Vehicles (AGVs) which do not detect and recognize the contraption which has to be transported and also the route has to be pre planned and fed to the vehicle. AGVs are autonomous vehicles or driverless vehicles used to transfer materials efficiently in a facility or an industry. This project aims to improve the AGVs into intelligent self-driving vehicles. The autonomous driving feature is accomplished with the help of behavioural cloning which tries mimic the driving of the user which was used to train the vehicle. The map of the environment is generated using Monocular Visual Odometry during the training and also during autonomous driving. Monocular meaning that only one camera is used to acquire the images unlike stereo cameras or omnidirectional cameras which are generally used. In an unlikely event of an obstacle present on the path, it is detected using MobileNet SSD method whose input is the live feed captured using the camera placed at the front end of the vehicle. The alternative path is selected using the map generated and PID controller . The controller being used is Raspberry Pi . The processing related to the autonomous driving is done on the controller and the processing related to the image processing is done on the server. The server and the controller are connected using a common wireless network. By splitting the processing to the server and the controller, we are reducing the load on the controller as the processing power of a controller is limited. These ideas have been implemented and the results were observed using a prototype vehicle of 1/16th scale . The vehicle proposed here aims to reduce the overall cost of an intelligent vehicle used in an industry environment and use the resources as efficiently as possible. Contents Overview Hardware Required Cost Architecture Algorithm Commands To Run Google Colab FAQ","title":"Home"},{"location":"#project-overview","text":"Today, Industries or warehouses are equipped with Automatic Guided Vehicles (AGVs) which do not detect and recognize the contraption which has to be transported and also the route has to be pre planned and fed to the vehicle. AGVs are autonomous vehicles or driverless vehicles used to transfer materials efficiently in a facility or an industry. This project aims to improve the AGVs into intelligent self-driving vehicles. The autonomous driving feature is accomplished with the help of behavioural cloning which tries mimic the driving of the user which was used to train the vehicle. The map of the environment is generated using Monocular Visual Odometry during the training and also during autonomous driving. Monocular meaning that only one camera is used to acquire the images unlike stereo cameras or omnidirectional cameras which are generally used. In an unlikely event of an obstacle present on the path, it is detected using MobileNet SSD method whose input is the live feed captured using the camera placed at the front end of the vehicle. The alternative path is selected using the map generated and PID controller . The controller being used is Raspberry Pi . The processing related to the autonomous driving is done on the controller and the processing related to the image processing is done on the server. The server and the controller are connected using a common wireless network. By splitting the processing to the server and the controller, we are reducing the load on the controller as the processing power of a controller is limited. These ideas have been implemented and the results were observed using a prototype vehicle of 1/16th scale . The vehicle proposed here aims to reduce the overall cost of an intelligent vehicle used in an industry environment and use the resources as efficiently as possible.","title":"Project Overview"},{"location":"#contents","text":"Overview Hardware Required Cost Architecture Algorithm Commands To Run Google Colab FAQ","title":"Contents"},{"location":"about/","text":"Hardware Requirements 1. Raspberry pi 3b Description and specifications: ARM microprocessor where training evaluation takes place by controlling steering and throttle. Broadcom BCM2837 64bitARMv7 Quad Core Processor powered Single Board Computer running at 1.2GHz 1GBRAM BCM43143 WiFion board Bluetooth Low Energy (BLE) on board 40pin extended GPIO USB 2 ports Full size HDMICSI camera port for connecting the Raspberry Pi camera DSI display port for connecting the Raspberry Pi touch screen display Micro USB power source supports up to 2.4 Amps Link to buy 2. PCA9685 driver Description and specifications: The PCA9685 is an I2C-bus controlled 16-channel LED or (servo) controller optimized for Red/Green/Blue/Amber (RGBA) color backlight- ing applications. 16 LED drivers 1 MHz Fast-mode Plus compatible I2C-bus interface with 30 mA high drive capability on SDA output for driving high capacitive buses Operating power supply voltage range of 2.3 V to 5.5 V 25 MHz typical internal oscillator Link to buy 3. RC Car Chassis Description and specifications: HSP 94186 Brushed RC Car NiMH-7.2V-1100mAh battery Powerful motor: Rc380 Scale: 1/16 Controller: 2.4G 2CH Link to buy 4. 10000mAh Mi Power Bank 2i Description: To supply power to the Raspberry Pi. Lithium Polymer Battery Rated capacity: 3.85V/10000mAh Output: 18W max (5.1V/2.4A, 9V/2A, 12V/1.5A) Link to buy Note: 1. Make sure that the output current rating of the power bank is 2.4A or else the Raspberry Pi will face connectivity issues. 2. Use an appropriate cable (suitable for fast charging or which supports 2.4A) for connecting the Raspberry Pi to the Power Bank. 5. 3D printed parts Description: Required to support Processor, servo driver and camera. 6. 16GB Micro SD Card Description: Used for flashing Raspbian os act as a Read only memory(ROM). 7. Wide Angle Raspberry Pi Camera: Description and specifications: Fisheye Lens, offers wider field of view 5 megapixel OV5647 sensor Field of View : 160 degree Link to buy 8. Electronic Speed Controller(ESC): Description and specifications: Powerday RC ESC 10A Brushed Motor Speed Controller for RC Car and Boat Tank with Brake Driver frequency: 2KHz Dimensions(L W H): 23 21 6.0mm Current(A):10A Link to buy 9. Servo: Description and specifications: Robodo SG 90 Tower Pro Micro Servo Motor Torque: 1.8 kgcm Weight: 9 gram Gear Type: Plastic Link to buy","title":"Hardware"},{"location":"about/#hardware-requirements","text":"","title":"Hardware Requirements"},{"location":"about/#1-raspberry-pi-3b","text":"","title":"1. Raspberry pi 3b"},{"location":"about/#description-and-specifications","text":"ARM microprocessor where training evaluation takes place by controlling steering and throttle. Broadcom BCM2837 64bitARMv7 Quad Core Processor powered Single Board Computer running at 1.2GHz 1GBRAM BCM43143 WiFion board Bluetooth Low Energy (BLE) on board 40pin extended GPIO USB 2 ports Full size HDMICSI camera port for connecting the Raspberry Pi camera DSI display port for connecting the Raspberry Pi touch screen display Micro USB power source supports up to 2.4 Amps","title":"Description and specifications:"},{"location":"about/#link-to-buy","text":"","title":"Link to buy"},{"location":"about/#2-pca9685-driver","text":"","title":"2. PCA9685 driver"},{"location":"about/#description-and-specifications_1","text":"The PCA9685 is an I2C-bus controlled 16-channel LED or (servo) controller optimized for Red/Green/Blue/Amber (RGBA) color backlight- ing applications. 16 LED drivers 1 MHz Fast-mode Plus compatible I2C-bus interface with 30 mA high drive capability on SDA output for driving high capacitive buses Operating power supply voltage range of 2.3 V to 5.5 V 25 MHz typical internal oscillator","title":"Description and specifications:"},{"location":"about/#link-to-buy_1","text":"","title":"Link to buy"},{"location":"about/#3-rc-car-chassis","text":"","title":"3. RC Car Chassis"},{"location":"about/#description-and-specifications_2","text":"HSP 94186 Brushed RC Car NiMH-7.2V-1100mAh battery Powerful motor: Rc380 Scale: 1/16 Controller: 2.4G 2CH","title":"Description and specifications:"},{"location":"about/#link-to-buy_2","text":"","title":"Link to buy"},{"location":"about/#4-10000mah-mi-power-bank-2i","text":"","title":"4. 10000mAh Mi Power Bank 2i"},{"location":"about/#description","text":"To supply power to the Raspberry Pi. Lithium Polymer Battery Rated capacity: 3.85V/10000mAh Output: 18W max (5.1V/2.4A, 9V/2A, 12V/1.5A)","title":"Description:"},{"location":"about/#link-to-buy_3","text":"Note: 1. Make sure that the output current rating of the power bank is 2.4A or else the Raspberry Pi will face connectivity issues. 2. Use an appropriate cable (suitable for fast charging or which supports 2.4A) for connecting the Raspberry Pi to the Power Bank.","title":"Link to buy"},{"location":"about/#5-3d-printed-parts","text":"","title":"5. 3D printed parts"},{"location":"about/#description_1","text":"Required to support Processor, servo driver and camera.","title":"Description:"},{"location":"about/#6-16gb-micro-sd-card","text":"","title":"6. 16GB Micro SD Card"},{"location":"about/#description_2","text":"Used for flashing Raspbian os act as a Read only memory(ROM).","title":"Description:"},{"location":"about/#7-wide-angle-raspberry-pi-camera","text":"","title":"7. Wide Angle Raspberry Pi Camera:"},{"location":"about/#description-and-specifications_3","text":"Fisheye Lens, offers wider field of view 5 megapixel OV5647 sensor Field of View : 160 degree","title":"Description and specifications:"},{"location":"about/#link-to-buy_4","text":"","title":"Link to buy"},{"location":"about/#8-electronic-speed-controlleresc","text":"","title":"8. Electronic Speed Controller(ESC):"},{"location":"about/#description-and-specifications_4","text":"Powerday RC ESC 10A Brushed Motor Speed Controller for RC Car and Boat Tank with Brake Driver frequency: 2KHz Dimensions(L W H): 23 21 6.0mm Current(A):10A","title":"Description and specifications:"},{"location":"about/#link-to-buy_5","text":"","title":"Link to buy"},{"location":"about/#9-servo","text":"","title":"9. Servo:"},{"location":"about/#description-and-specifications_5","text":"Robodo SG 90 Tower Pro Micro Servo Motor Torque: 1.8 kgcm Weight: 9 gram Gear Type: Plastic","title":"Description and specifications:"},{"location":"about/#link-to-buy_6","text":"","title":"Link to buy"},{"location":"algorithms/","text":"","title":"Algorithms"},{"location":"cost/","text":"Hardware Cost in Rs. Raspberry Pi 3B 3000 PCA 9685 adafruit driver 500 RC car chassis 2000 16GB micro SD card 300 3D printed parts 6000 Wide angle Raspberry Pi camera 2000 Jumper wires and screws 200 Total 14000 All the cost specified above are in Indian Rupees .","title":"Cost"},{"location":"googlecolab/","text":"Introduction Colab (short for Colaboratory) allows the user to write and execute Python on your browser, with Zero configuration required Free access to GPUs Easy sharing Whether you're a student, a data scientist or an AI researcher, Colab can make your work easier. Google Colab is a free, browser-based notebook environment that runs entirely in the cloud. Why use Google Colab? Serverless: Colab allows you to instantly spring up a Jupyter Notebook completely serverless in the browser which means that you do not have to worry about provisioning hardware, your Python version and path or if you are on Windows, MacOS or even a phone. Sharing: You can share the notebook seamlessly, just like a Google Doc. Free GPU: Free GPU at the click of a button. For further information on how it is used in this project refer to the Algorithms section .","title":"Google Colab"},{"location":"googlecolab/#introduction","text":"Colab (short for Colaboratory) allows the user to write and execute Python on your browser, with Zero configuration required Free access to GPUs Easy sharing Whether you're a student, a data scientist or an AI researcher, Colab can make your work easier. Google Colab is a free, browser-based notebook environment that runs entirely in the cloud.","title":"Introduction"},{"location":"googlecolab/#why-use-google-colab","text":"Serverless: Colab allows you to instantly spring up a Jupyter Notebook completely serverless in the browser which means that you do not have to worry about provisioning hardware, your Python version and path or if you are on Windows, MacOS or even a phone. Sharing: You can share the notebook seamlessly, just like a Google Doc. Free GPU: Free GPU at the click of a button. For further information on how it is used in this project refer to the Algorithms section .","title":"Why use Google Colab?"}]}